name: Zowe Nightly Pipeline
on:
  workflow_dispatch:
    inputs:
      skip-build:
        description: Skip build?
        type: boolean
        required: false
        default: 'false'
      skip-test:
        description: Skip test?
        type: boolean
        required: false
        default: 'false'
      skip-release:
        description: Skip release?
        type: boolean
        required: false
        default: 'false'

jobs:
  call-build-pipeline:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.skip-build == 'false' }}
    steps:
      - name: 'Call build workflow'
        uses: zowe-actions/shared-actions/workflow-remote-call-wait@main
        id: call-build
        with:
          github-token: ${{ secrets.ZOWE_ROBOT_TOKEN }}
          owner: zowe
          repo: zowe-install-packaging
          workflow-filename: build-packaging.yml
          branch-name: staging
          poll-frequency: 2
          inputs-json-string: '{"BUILD_SMPE":"true","BUILD_DOCKER":"true","BUILD_KUBERNETES":"true"}'
        # env:
        #   DEBUG: 'workflow-remote-call-wait'

      - name: 'Report build failure if applied'
        if: ${{ steps.call-build.outputs.workflow-run-conclusion }} != "success"
        uses: actions/github-script@v5
        with:
          script: |
            core.setFailed('Build workflow ${{ steps.call-build.outputs.workflow-run-num }} is not successful')
    outputs:
      build-run-num: ${{ steps.call-build.outputs.workflow-run-num }}
    
      
  call-test-pipeline:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.skip-test == 'false' }}
    needs: call-build-pipeline
    steps:
      - name: 'Call test workflow'
        uses: zowe-actions/shared-actions/workflow-remote-call-wait@main
        id: call-test
        with:
          github-token: ${{ secrets.ZOWE_ROBOT_TOKEN }}
          owner: zowe
          repo: zowe-install-packaging
          workflow-filename: cicd-test.yml
          branch-name: staging
          poll-frequency: 3
          inputs-json-string: '{"custom-zowe-artifactory-pattern-or-build-number":"${{ needs.call-build-pipeline.outputs.build-run-num }}"}'

      - name: 'Report test failure if applied'
        if: ${{ steps.call-test.outputs.workflow-run-conclusion }} != "success"
        uses: actions/github-script@v5
        with:
          script: |
            core.setFailed('Test workflow ${{ steps.call-test.outputs.workflow-run-num }} is not successful')
        # env:
        #   DEBUG: 'workflow-remote-call-wait'
    
  call-release-pipeline:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.skip-release == 'false' }}
    needs: call-test-pipeline
    steps:
      - name: 'Setup jFrog CLI'
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_TOKEN }}

      - name: 'Get version of staging branch'
        run: |
          echo ZOWE_ART_DIR=$(jfrog rt search \
          --build="zowe-install-packaging/staging/${{ needs.call-build-pipeline.outputs.build-run-num }}" \
          "libs-snapshot-local/org/zowe/*/zowe*pax" | jq -r ".[].path" | sed "s#libs-snapshot-local/org/zowe/##g" | cut -f1 -d"/")  >> $GITHUB_ENV

      - name: 'Call release workflow'
        uses: zowe-actions/shared-actions/workflow-remote-call-wait@main
        id: call-release
        with:
          github-token: ${{ secrets.ZOWE_ROBOT_TOKEN }}
          owner: zowe
          repo: zowe-release
          workflow-filename: release.yml
          branch-name: main
          poll-frequency: 1
          inputs-json-string: '{"zowe-artifact-dir":"${{ env.ZOWE_ART_DIR }}","zowe-build-name":"zowe-install-packaging/staging","zowe-build-number":"${{ needs.call-build-pipeline.outputs.build-run-num }}","zowe-release-version":"nightly"}'