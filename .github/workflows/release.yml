name: Zowe Release Pipeline
on:
  # workflow_call: TODO
  #   inputs:    
  #   secrets:
      
  workflow_dispatch:
    inputs:
      zowe-artifact-dir:
        description: 'ZOWE_ARTIFACT_DIR'
        default: '1.27.0-RC'
        required: true
      zowe-build-name:
        description: 'ZOWE_BUILD_NAME'
        default: 'zowe-install-packaging/rc'
        required: true
      zowe-build-number:
        description: 'ZOWE_BUILD_NUMBER'
        required: true
        default: '214'
      zowe-release-version:
        description: 'ZOWE_RELEASE_VERSION'
        default: '1.99.0'
        required: true
      force-sign:
        type: boolean
        description: 'Force sign'
        required: false
      force-tag:
        type: boolean
        description: 'Force tag'
        required: false

env:
  ZOWE_INSTALL_PACKAGING_REPO: zowe/zowe-install-packaging
  ZOWE_RELEASE_JSON_PATTERN: zowe-release-v@.json

jobs:
  promote-and-release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: '[Prep 1] Checkout'
        uses: actions/checkout@v2
  
      - name: '[Prep 2] Setup jFrog CLI'
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_TOKEN }}

      - name: '[Prep 3] Convert release json template then print'
        run: |
          sed -e "s#{ZOWE_ARTIFACT_DIR}#${{ github.event.inputs.zowe-artifact-dir }}#g" \
            zowe-release-v1-template.json > zowe-release-v1.json
          echo "Current zowe-release-v1.json is:"
          cat zowe-release-v1.json

      - name: 'Validate zowe artifacts'
        id: validate
        uses: ./validate
        with:
          build-name: ${{ github.event.inputs.zowe-build-name }}
          build-num: ${{ github.event.inputs.zowe-build-number }}
          release-version: ${{ github.event.inputs.zowe-release-version }}
        # env:
        #   DEBUG: 'zowe-release:validate'

      - name: 'Generate source build - formal release only!'
        timeout-minutes: 10
        if: env.IS_FORMAL_RELEASE == 'true'
        run: |
          export GITHUB_USERNAME=${{ secrets.ZOWE_ROBOT_USER }}
          export GITHUB_PASSWORD=${{ secrets.ZOWE_ROBOT_TOKEN }}
          ./.dependency/prepare_source_zip.sh
          zip -r .release/zowe_sources-${{ github.event.inputs.zowe-release-version }}.zip .release/source_zip

      - name: 'Promote (jfrog rt copy)'
        timeout-minutes: 10
        uses: ./promote
        with:
          promote-json-file-name-full: ${{ steps.validate.outputs.PROMOTE_JSON_FILE_NAME_FULL }}
          release-version: ${{ github.event.inputs.zowe-release-version }}
