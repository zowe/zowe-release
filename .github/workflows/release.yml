name: Zowe Release Pipeline
on:
  # workflow_call: TODO
  #   inputs:    
  #   secrets:
      
  workflow_dispatch:
    inputs:
      zowe-artifact-dir:
        description: 'ZOWE_ARTIFACT_DIR'
        default: '1.xx.0-RC'
        required: true
      zowe-build-name:
        description: 'ZOWE_BUILD_NAME'
        default: 'zowe-install-packaging/rc'
        required: true
      zowe-build-number:
        description: 'ZOWE_BUILD_NUMBER'
        required: true
      zowe-release-version:
        description: 'ZOWE_RELEASE_VERSION'
        required: true
      force-sign:
        type: boolean
        description: 'Force sign'
        required: false
      force-tag:
        type: boolean
        description: 'Force tag'
        required: false

env:
  ZOWE_INSTALL_PACKAGING_REPO: zowe/zowe-install-packaging

jobs:
  promote-and-release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: '[Prep 1] Checkout'
        uses: actions/checkout@v2
  
      - name: '[Prep 2] Setup jFrog CLI'
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_TOKEN }}

      - name: '[Prep 3] Convert release json template then print'
        run: |
          sed -e "s#{ZOWE_ARTIFACT_DIR}#${{ github.event.inputs.zowe-artifact-dir }}#g" \
            zowe-release-v1-template.json > zowe-release-v1.json
          echo "Current zowe-release-v1.json is:"
          cat zowe-release-v1.json

      - name: 'Validate zowe release version input'
        run: |
          zowe_release_version="${{ github.event.inputs.zowe-release-version }}"
          echo "Checking if $zowe_release_version is a valid semantic version ..."
          # validate release version scheme
          # thanks semver/semver, this regular expression comes from
          # https://github.com/semver/semver/issues/232#issuecomment-405596809
          if [[ "$zowe_release_version" =~ ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$ ]]; then
            echo "$zowe_release_version is not a valid semantic version."
            exit 1
          fi
          if [[ "$zowe_release_version" =~ ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$ ]]; then
            echo IS_FORMAL_RELEASE="true" >> $GITHUB_ENV
            echo ">>>> Version $zowe_release_version is considered as a FORMAL RELEASE."
          else
            echo ">>>> Version $zowe_release_version is NOT considered as a FORMAL RELEASE."
          fi

      - name: 'Validate zowe artifacts'
        uses: ./validate
        with:
          build-name: ${{ github.event.inputs.zowe-build-name }}
          build-num: ${{ github.event.inputs.zowe-build-number }}
          release-version: ${{ github.event.inputs.zowe-release-version }}
        env:
          DEBUG: 'zowe-release:validate'

